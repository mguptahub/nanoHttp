# name: Deploy Website to Vercel

# on:
#   release:
#     types: [published]
#   repository_dispatch:
#     types: [deploy-website]
#   workflow_dispatch: # Allow manual triggers

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: Check if website directory exists
#         run: |
#           if [ ! -d "website" ]; then
#             echo "::error::Website directory not found!"
#             exit 1
#           fi
      
#       - name: Create install script
#         run: |
#           cat > website/install.sh << 'EOF'
#           #!/bin/bash
          
#           # Detect OS and architecture
#           OS=$(uname -s | tr '[:upper:]' '[:lower:]')
#           ARCH=$(uname -m)
          
#           if [ "$ARCH" = "x86_64" ]; then
#             ARCH="amd64"
#           elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
#             ARCH="arm64"
#           else
#             echo "Error: Unsupported architecture: $ARCH"
#             exit 1
#           fi
          
#           # Set the binary name based on OS and architecture
#           BINARY="nanoHttp-${OS}-${ARCH}"
#           RELEASE_URL="https://github.com/mguptahub/nanoHttp/releases/latest/download/${BINARY}"
          
#           echo "Downloading nanoHttp for ${OS} ${ARCH}..."
#           curl -L -o nanoHttp "${RELEASE_URL}"
          
#           chmod +x nanoHttp
          
#           # Install to /usr/local/bin if possible, otherwise to current directory
#           if [ -w "/usr/local/bin" ]; then
#             mv nanoHttp /usr/local/bin/
#             echo "nanoHttp installed to /usr/local/bin/nanoHttp"
#           else
#             echo "nanoHttp downloaded to current directory. To install system-wide, run:"
#             echo "sudo mv nanoHttp /usr/local/bin/"
#           fi
#           EOF
          
#           chmod +x website/install.sh

#       - name: Create Vercel config file
#         run: |
#           cat > website/vercel.json << 'EOF'
#           {
#             "name": "nanohttp",
#             "version": 2,
#             "public": true,
#             "cleanUrls": true,
#             "trailingSlash": false,
#             "github": {
#               "silent": true
#             }
#           }
#           EOF

#       - name: Install Vercel CLI
#         run: npm install -g vercel

#       - name: Deploy to Vercel
#         run: |
#           cd website
#           vercel deploy --prod --token ${{ secrets.VERCEL_TOKEN }} --yes --scope ${{ secrets.VERCEL_SCOPE || 'personal' }} 